2014/09/06 ver6_8_sawa 沢口直哉
警告が発生するのでMusicPlayerを削除。

2014/09/06 ver6_7_sawa 沢口直哉
音楽再生を追加
MP3音楽のループ再生を実装。

2014/09/05 ver6_6_sawa 沢口直哉
バレットの画像をはなびらに変更。
入力されたローマ字を１文字単位で表示するように変更。
ロゴを表示されるように変更
クレジット情報を入力するラベルを追加

2014/09/05 ver6_5_sawa 沢口直哉
女の子の画像が切り替わるよう変更。
それに伴い、Playerクラスの不必要なメソッドを空にした。

2014/09/05 ver6_4_sawa 沢口直哉
CenterPointが更新されるように変更した。

2014/09/04 ver6_3_sawa 沢口直哉
FakeBulletを追加しました。
デモがてらPlayerにてFakeBulletを利用するように変更しています。
CenterPointが完成し、Playerを継承した新しいキャラのクラス（３方向の画像を備えた）が完成したら
置き返します。

2014/09/04 ver6_2 沢口直哉
scoreを消した。

2014/09/04 ver6_1 沢口直哉
MusicPlayerクラスを実装しました。
効果音の再生は結構苦戦しそうな気がします。。。
SoundPlayerは２個newしたとしても、１曲分しか同時に再生できないとのことでした。


PlayListクラスのバグを修正しました。

2014/09/04 ver6_1 沢口直哉
例文表示画面にひらがなの文字列が表示されるように変更。

2014/09/04 ver5_8 沢口直哉
苦手なキーを表示する機能を実装。
ゲーム終了時に苦手なキーが５文字分表示される。
表示される苦手なキーを増やしたい場合はGameMainWindoの定数PRINT_RESULT_COUNTを変更する。
苦手なキーを「リザルト画面」と呼ぶことにする。

検討事項。
リザルト画面はBitmap画像になっているので、背景を挿入することも可能である。
そのため、リザルト画面の背景を検討する。


2014/09/04 ver5_6 沢口直哉
MismatchCounterを用いて間違って押してしまったキーのカウントを保持することにしました。
GameCore/Helper/MismatchCounterに以下のクラスを追加しました。
MismatchCounter --- 間違えた文字と、間違った回数を保持する。
SimpleCounter   --- 簡素なカウンターだが、任意の型のタグを保持することができる。(ここにアルファベット１文字を格納しておく。）

なお、クラスを追加しただけで、実際にカウントを上げたりするロジックは組み込んでいない。

これから必要になること。
音楽を鳴らすクラス。（ＢＧＭ（ループ再生）と効果音（一回のみ再生）の両方に対応すること。）
問題表示に平仮名表示を追加すること。（常用漢字でないものが使われている、複数の読み方があるという例文がみられるため。）
フォームのLabelを用いた問題表示を実装する事。（なんだかよくわからんエラーが出るんだが。。。）
PlayListのGetNextMusicにおいて、_CurrentIndexの値が更新されていないので、修正する。

検討事項。
GameMainWindowにおいて、startボタンやpauseボタン、quitボタンに表示する文字を日本語にする。
start -> ゲーム開始
pause -> 一時停止
quit  -> タイトル画面に戻る

といった具合に。。。

修正事項。
イミディエイトウィンドウに出力するようなデバックコードを削除する。
例）LinerBullet Was Destroyed...とかを出力するコードを削除する。


2014/09/02 ver5_6 沢口直哉
resourceを新しいものに更新しました。
※具体的には、誤りのあった例文の修正を行いました。（読み仮名が間違っていたり、漢字が含まれていたり。。。）
加えて、変換テーブルのエクセルを同梱しました。


2014/09/02 ver5_5佐々木惣
PlayListクラスを追加。

2014/09/01 ver5_4沢口直哉
GameCore/Helper/Musicフォルダを追加。
EventCounterクラスを追加。
Musicクラスを追加。

以下のひな型を追加
PlayList
MusicPlayer

2014/09/02 ver5_3沢口直哉
キー入力を受け取るデータ構造にリングバッファを採用。
以下のクラスを追加(GameCore/Helper/RingBuffer)
LoopCounter --- ループするカウント。最大値が4なら、4を超えた瞬間に設定した初期値に戻る。
RingBuffer  --- タイミングによっては読み取り前にバッファから削除されてしまうバグがあった。
				そのため、リングバッファを採用し、フレームごとのクリア処理を削除した。
				RingBuffer使用後、この問題は解決された。
				（1フレームにバッファサイズを超える入力があった場合は読み取り前に削除されるので、
				バッファサイズ(Capacity)は十分に大きなサイズを指定すること。）

pose(一時停止)をpauseの正しいスペルに直した。
変数名も修正済み。

ローマ字変換テーブルやタイトル画像などはresourceフォルダに移行。

2014/09/01 ver5_2沢口直哉
重複しないランダム生成クラスを追加。
テスト済み。

2014/09/01 ver5_1沢口直哉
画像をファイルから読みだすように変更。
例文から実際にゲームで使う例文を抽出する処理を追加。
タイトル画面と、ポーズ画面への切り替えをメソッドで行うよう変更。（ポインタを参照しまくってDisposeされるときりがないため。）
ただし、重複なしランダムのクラスが未実装。（Next()関数が実装されていない。）
フレームレートを30に変更（体感上ちょうど良いと思われる。）
GameMainWindowにゲームオーバーになった際の処理を行う関数を追加。（中身は未実装なので、単純にタイトル画面に戻している。）
敵とプレイヤーの座標を定数化。


2014/08/25 ver4_1沢口直哉
フレームレートを６０に更新。
弾丸スピードを１０に更新。
あまり早くするとＰＣの処理がおっつかなくなるので注意。
また、目標文に入力履歴を表示するように変更。

2014/08/25 ver1_4 沢口直哉
IdentialRandomTableを追加。

2014/08/23 ver1_3 沢口直哉
タイピング文字列の情報を格納するクラス(TypingSentence)の作成。
CSVファイルからタイピング文字列の情報を読み取るTypingDataReaderを作成。
　なお、SCVの行は以下の構造を想定している。
		< 画面上に表示する文字列（漢字を含んでも良い）>,< ひらがな文字列 >

Enemyクラスを実装した。
簡単ではあるがプロトタイプは完成した。


2014/08/23 ver1_2 沢口直哉
UpdateEventArgを構造体からクラスに変更。さらに、キーボードから入力された文字を保持するプロパティを追加。
GameManagerからIsRunningプロパティを削除。排他処理はLockステートメントを用いて行うこととする。
Playerクラスを作成。
ＧＵＩボタンのインタフェースを実装。
JpRomanAutomatonのファイルパスの検証。（GameMainWindowに相対パスを記入。）

＜必要と思われる画像＞
簡単なタイトル画像
ポーズ中の画像(現在は応急対処としてLabelを使っている。)

2014/08/23 ver1_1 沢口直哉
新規作成。
既存のプロトタイプをコピーし、新規のプロジェクトファイルを作成した。
また、ゲーム画面に必要と思われるＧＵＩパーツを追加した。

新しいBulletを作成
　・KanaBullet
		LinerBulletと同じだが、画像が文字となる。
